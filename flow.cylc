#!jinja2
####################################
# define suite
#   hopefully user does not have to edit anything below here
{% set ICP = '19940101' %}
{% set FCP = '20231231' %}
{% set ATMRES = "C192" %}
{% set OCNRES = "mx025" %}
{% set C96_REPLAY = False %}
{% set DATES = "01T00" %}
{% set MAIL_ADDRESS = "neil.barton@noaa.gov" %}

####################################
# DATES option
# P1W                                   : Run once a week Start on {{ ICP }}
# P1D                                   : Run once a day starting on {{ ICP }}
# W-4T00                                : Run on Thursdays
# W-1T00,W-4T00                         : Run on Mondays and Thursdays
# 01T00                                 : Run on the First of each month
# R1/20151101T00,R1/...                 : Run these Specifc Dates
# 19940501T0000Z/P1Y,19941101T0000Z/P1Y : Run 1st of May and November (SFS baseline start dates)

####################################
# Options based on the above
{% set CHGRES_MODELS = "ATM, OCN, ICE" %}
{% set PERTURBATION_MODELS = "ATM, OCN" %}
{% if C96_REPLAY %}
{% set ATMRES = "C96" %}
{% set OCNRES = "mx100" %}
{% set MODELS = "ALL" %}
{% set POST_MODELS = "AER, ICE, MED" %}
{% endif %}

{% if ATMRES == "C384" %}
{% set MODELS = "ATM, OCN, ICE, WAV, MED" %}
{% set POST_MODELS = "AER, ICE, MED" %}
{% endif %}
{% if ATMRES == "C192" %}
{% set MODELS = "ATM, OCN, ICE, WAV" %}
{% set POST_MODELS = "AER, ICE" %}
{% endif %}
{% if ATMRES == "C96" %}
{% set MODELS = "ATM, OCN, ICE " %}
{% set POST_MODELS = "AER, ICE, SFC" %}
{% endif %} 

[meta]
    title = "grab, process, organize, and store replay ICs"
    description = {{ ATMRES }}{{ OCNRES }}

[scheduler]
    UTC mode = True
    [[events]]
        mail events = failed, stall, abort, submission failed
    [[mail]]
        to = {{ MAIL_ADDRESS }}
    
[task parameters]
    models = {{ MODELS }}
    post_models = {{ POST_MODELS }}
    perturbation_models = {{ PERTURBATION_MODELS }}
    chgres_models = {{ CHGRES_MODELS }}

[scheduling]
    initial cycle point = {{ ICP }}
    final cycle point = {{ FCP }}
    runahead limit = P0 
    [[queues]]
        [[[default]]]
            limit = 12
        [[[AER_GRAB]]]
            limit = 1
            members = post_AER
        [[[BACKGROUND]]]
            limit = 8
            members = GET, GET_PERTURBATIONS
    [[graph]]
        {{ DATES }} = """
         GET
        
        {% if C96_REPLAY %} 
        get_ALL        => post_ICE & post_AER & post_MED
        {% else %}
        
        get_ATM        => post_AER 
        get_ICE        => post_ICE
        
        {% if ATMRES == "C384" %} 
        get_MED        => post_MED
        post_MED       => link_member_dirs

        {% else %}
        post_AER        => chgres_ATM
        chgres_ATM      => link_member_dirs
        
        {% endif %}
        
        {% if ATMRES == "C96" %}
        chgres_ATM      => post_SFC
        post_SFC        => link_member_dirs
        
        {% endif %}
        
        {% if OCNRES != "mx025" %}
        post_ICE        => chgres_ICE
        get_OCN         => chgres_OCN
        CHGRES:succeed-all => link_member_dirs
        {% endif %}
        
        {% endif %} # C96_REPLAY

        
        GET_PERTURBATIONS:succeed-all => link_member_dirs
        GET:succeed-all               => link_member_dirs
        POST:succeed-all              => link_member_dirs
        link_member_dirs              => ics_to_hpss
        
        """

################################################
# tasks
[runtime]
    [[root]] 
        execution retry delays = 3*PT10M
        platform = slurm_local
        init-script = """
umask 022
set -xu
export SCRIPT_DIR=${CYLC_RUN_DIR}/${CYLC_WORKFLOW_NAME}/_cylc-install/source/SCRIPTS
"""
        pre-script = """
source ${SCRIPT_DIR}/modules.sh
        """
        [[[environment]]]
            DTG                 = $(cylc cycle-point --template=%Y%m%d%H)
            ATMRES              = {{ ATMRES }}
            OCNRES              = {{ OCNRES }}
            C96_REPLAY          = {{ C96_REPLAY }}
        [[[directives]]]
            --account = marine-cpu
            --ntasks = 1
            --time = 00:30:00
            --mem = 0
            #--qos = debug

####################################
# grab experiments and obs
    [[HPSS]]
        [[[directives]]]
            --partition = service
    [[GET]]
        platform = localhost
    [[get<models>]]
        inherit = GET
        script = """
        model=${CYLC_TASK_PARAM_models}
        ${SCRIPT_DIR}/get_${model}.sh ${DTG} 
        """
    [[POST]]
        platform = localhost
    [[post<post_models>]]
        inherit = POST
        script = """
        model=${CYLC_TASK_PARAM_post_models}
        ${SCRIPT_DIR}/post_${model}.sh ${DTG}
        """
    [[GET_PERTURBATIONS]]
        inherit = HPSS
        platform = localhost
    [[get_perturbations<perturbation_models>]]
        inherit = GET_PERTURBATIONS
        script = """
        model=${CYLC_TASK_PARAM_perturbation_models}
        ${SCRIPT_DIR}/get_perturbations_${model}.sh ${DTG} 
        """
    [[CHGRES]]
        [[[directives]]]
            --ntasks = 6
    [[chgres<chgres_models>]]
        inherit = CHGRES
        script = """
        model=${CYLC_TASK_PARAM_chgres_models}
        ${SCRIPT_DIR}/chgres_${model}.sh ${DTG}
        """
    [[link_member_dirs]]
        platform = localhost
        script = """
        ${SCRIPT_DIR}/link_member_dirs.sh ${DTG} 
        """
    [[ics_to_hpss]]
        inherit = HPSS
        script = """
        ${SCRIPT_DIR}/hpss_put_ICs.sh ${DTG} 
        """
   
